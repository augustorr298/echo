{"ast":null,"code":"// Example: Save test results to Firestore\nimport { db } from '../firebase';\nimport { collection, addDoc, Timestamp } from 'firebase/firestore';\nexport async function saveTestResult(result) {\n  try {\n    if (!db) {\n      console.warn('Firebase not available, skipping save');\n      return 'offline-mode';\n    }\n    const docRef = await addDoc(collection(db, 'testResults'), {\n      ...result,\n      createdAt: Timestamp.now()\n    });\n    return docRef.id;\n  } catch (e) {\n    console.error('Error saving test result:', e);\n    throw e;\n  }\n}","map":{"version":3,"names":["db","collection","addDoc","Timestamp","saveTestResult","result","console","warn","docRef","createdAt","now","id","e","error"],"sources":["/Users/uri/Documents/GitHub/echo/prototype/src/components/firestoreHelpers.js"],"sourcesContent":["// Example: Save test results to Firestore\nimport { db } from '../firebase';\nimport { collection, addDoc, Timestamp } from 'firebase/firestore';\n\nexport async function saveTestResult(result) {\n  try {\n    if (!db) {\n      console.warn('Firebase not available, skipping save');\n      return 'offline-mode';\n    }\n    \n    const docRef = await addDoc(collection(db, 'testResults'), {\n      ...result,\n      createdAt: Timestamp.now(),\n    });\n    return docRef.id;\n  } catch (e) {\n    console.error('Error saving test result:', e);\n    throw e;\n  }\n}\n"],"mappings":"AAAA;AACA,SAASA,EAAE,QAAQ,aAAa;AAChC,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAElE,OAAO,eAAeC,cAAcA,CAACC,MAAM,EAAE;EAC3C,IAAI;IACF,IAAI,CAACL,EAAE,EAAE;MACPM,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC;MACrD,OAAO,cAAc;IACvB;IAEA,MAAMC,MAAM,GAAG,MAAMN,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,aAAa,CAAC,EAAE;MACzD,GAAGK,MAAM;MACTI,SAAS,EAAEN,SAAS,CAACO,GAAG,CAAC;IAC3B,CAAC,CAAC;IACF,OAAOF,MAAM,CAACG,EAAE;EAClB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVN,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAED,CAAC,CAAC;IAC7C,MAAMA,CAAC;EACT;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}