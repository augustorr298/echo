{"ast":null,"code":"// Firebase configuration and initialization\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\nimport { getAnalytics } from 'firebase/analytics';\n\n// Firebase configuration from environment variables\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Check if all required environment variables are available\nconst hasValidConfig = process.env.REACT_APP_FIREBASE_API_KEY && process.env.REACT_APP_FIREBASE_AUTH_DOMAIN && process.env.REACT_APP_FIREBASE_PROJECT_ID;\nlet app = null;\nlet db = null;\nlet auth = null;\nlet analytics = null;\nif (hasValidConfig && !firebaseConfig.apiKey.includes('your_')) {\n  try {\n    // Initialize Firebase\n    app = initializeApp(firebaseConfig);\n\n    // Initialize Firestore\n    db = getFirestore(app);\n\n    // Initialize Auth\n    auth = getAuth(app);\n\n    // Initialize Analytics (only in production)\n    if (typeof window !== 'undefined' && process.env.NODE_ENV === 'production') {\n      analytics = getAnalytics(app);\n    }\n    console.log('✅ Firebase initialized successfully');\n  } catch (error) {\n    console.error('❌ Firebase initialization failed:', error.message);\n  }\n} else {\n  console.log('🔧 Firebase configuration not found or incomplete, running in offline mode');\n  console.log('Please update your .env file with your Firebase credentials');\n}\n\n// Helper function to check if Firebase is ready\nexport const isFirebaseReady = () => !!app && !!db && !!auth;\nexport { db, auth, analytics };","map":{"version":3,"names":["initializeApp","getFirestore","connectFirestoreEmulator","getAuth","connectAuthEmulator","getAnalytics","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","hasValidConfig","app","db","auth","analytics","includes","window","NODE_ENV","console","log","error","message","isFirebaseReady"],"sources":["/Users/uri/Documents/GitHub/echo/prototype/src/firebase.js"],"sourcesContent":["// Firebase configuration and initialization\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\nimport { getAnalytics } from 'firebase/analytics';\n\n// Firebase configuration from environment variables\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Check if all required environment variables are available\nconst hasValidConfig = \n  process.env.REACT_APP_FIREBASE_API_KEY &&\n  process.env.REACT_APP_FIREBASE_AUTH_DOMAIN &&\n  process.env.REACT_APP_FIREBASE_PROJECT_ID;\n\nlet app = null;\nlet db = null;\nlet auth = null;\nlet analytics = null;\n\nif (hasValidConfig && !firebaseConfig.apiKey.includes('your_')) {\n  try {\n    // Initialize Firebase\n    app = initializeApp(firebaseConfig);\n    \n    // Initialize Firestore\n    db = getFirestore(app);\n    \n    // Initialize Auth\n    auth = getAuth(app);\n    \n    // Initialize Analytics (only in production)\n    if (typeof window !== 'undefined' && process.env.NODE_ENV === 'production') {\n      analytics = getAnalytics(app);\n    }\n    \n    console.log('✅ Firebase initialized successfully');\n  } catch (error) {\n    console.error('❌ Firebase initialization failed:', error.message);\n  }\n} else {\n  console.log('🔧 Firebase configuration not found or incomplete, running in offline mode');\n  console.log('Please update your .env file with your Firebase credentials');\n}\n\n// Helper function to check if Firebase is ready\nexport const isFirebaseReady = () => !!app && !!db && !!auth;\n\nexport { db, auth, analytics };\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,wBAAwB,QAAQ,oBAAoB;AAC3E,SAASC,OAAO,EAAEC,mBAAmB,QAAQ,eAAe;AAC5D,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACpDC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC;EAC5DC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC;EACrEC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW,yBAAyB;EAC5CC,aAAa,EAAEb,OAAO,CAACC,GAAG,CAACa;AAC7B,CAAC;;AAED;AACA,MAAMC,cAAc,GAClBf,OAAO,CAACC,GAAG,CAACC,0BAA0B,IACtCF,OAAO,CAACC,GAAG,CAACG,8BAA8B,IAC1CJ,OAAO,CAACC,GAAG,CAACK,6BAA6B;AAE3C,IAAIU,GAAG,GAAG,IAAI;AACd,IAAIC,EAAE,GAAG,IAAI;AACb,IAAIC,IAAI,GAAG,IAAI;AACf,IAAIC,SAAS,GAAG,IAAI;AAEpB,IAAIJ,cAAc,IAAI,CAACjB,cAAc,CAACC,MAAM,CAACqB,QAAQ,CAAC,OAAO,CAAC,EAAE;EAC9D,IAAI;IACF;IACAJ,GAAG,GAAGxB,aAAa,CAACM,cAAc,CAAC;;IAEnC;IACAmB,EAAE,GAAGxB,YAAY,CAACuB,GAAG,CAAC;;IAEtB;IACAE,IAAI,GAAGvB,OAAO,CAACqB,GAAG,CAAC;;IAEnB;IACA,IAAI,OAAOK,MAAM,KAAK,WAAW,IAAIrB,OAAO,CAACC,GAAG,CAACqB,QAAQ,KAAK,YAAY,EAAE;MAC1EH,SAAS,GAAGtB,YAAY,CAACmB,GAAG,CAAC;IAC/B;IAEAO,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;EACpD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACC,OAAO,CAAC;EACnE;AACF,CAAC,MAAM;EACLH,OAAO,CAACC,GAAG,CAAC,4EAA4E,CAAC;EACzFD,OAAO,CAACC,GAAG,CAAC,6DAA6D,CAAC;AAC5E;;AAEA;AACA,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAAM,CAAC,CAACX,GAAG,IAAI,CAAC,CAACC,EAAE,IAAI,CAAC,CAACC,IAAI;AAE5D,SAASD,EAAE,EAAEC,IAAI,EAAEC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}